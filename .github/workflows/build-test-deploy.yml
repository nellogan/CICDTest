name: build-test-deploy
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get install -y gcc

      - name: Build functions.o
        run: gcc -I. -c functions.c -o functions.o

      - name: Build main.o
        run: gcc -I. -c main.c -o main.o

      - name: Build executable
        run: gcc -I. functions.o main.o -o main_exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: main_exe-artifact
          path: main_exe

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: main_exe-artifact

      - name: Grant execution privilege and run test
        run: chmod 770 ./main_exe && ./main_exe

  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d
        with:
          github-token: "${{ secrets.CICDTest }}"
          skip-commit-verification: true

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Approve a PR if not already approved
        run: |
          gh pr checkout "$PR_URL"
            if [ "$(gh pr status --json reviewDecision -q .currentBranch.reviewDecision)" != "APPROVED" ];
          then
            gh pr review --approve "$PR_URL"
          else
            echo "PR already approved.";
          fi
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.CICDTest}}