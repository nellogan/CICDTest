name: build-test-deploy
on:
  push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get install -y gcc

      - name: Build functions.o
        run: gcc -I. -c functions.c -o functions.o

      - name: Build main.o
        run: gcc -I. -c main.c -o main.o

      - name: Build executable
        run: gcc -I. functions.o main.o -o main_exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: main_exe-artifact
          path: main_exe
          retention-days: 0

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: main_exe-artifact

      - name: Grant execution privilege and run test
        run: chmod 770 ./main_exe && ./main_exe

      - name: forbidden
        run: echo should not happen

  deploy:
    needs: test
    runs-on: ubuntu-latest
#    permissions: write-all
    permissions:
      contents: write # Needed to merge opened pull request
      pull-requests: write
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: 'Create pull request'
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const pulls = await github.rest.pulls.list({
              owner: owner,
              repo: repo,
              head: context.ref,
              base: 'main',
              state: 'open',
            });
            if (pulls.data.length < 1) {
              await github.rest.pulls.create({
                title: '[CI] Merge beta into main',
                owner: owner,
                repo: repo,
                head: context.ref,
                base: 'main',
                body: [
                  'This PR is auto-generated by',
                  '[actions/github-script](https://github.com/actions/github-script)',
                ].join('\n'),
              });
            } else {
              const existing_pr = pulls.data[0];
              await github.rest.pulls.update({
                owner: owner,
                repo: repo,
                pull_number: existing_pr.number,
                body: [
                  existing_pr.body,
                  `Updated by Job ${context.job}`,
                ].join('\n'),
              });
            }

      - name: 'Approve PR'
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const pulls = await github.rest.pulls.list({
              owner: owner,
              repo: repo,
              head: context.ref,
              base: 'main',
              state: 'open',
            });
            const existing_pr = pulls.data[0];
            const mergePR = await github.rest.pulls.merge({
              owner: owner,
              repo: repo,
              pull_number: existing_pr.number,
              commit_title: 'commit title placeholder',
              commit_message: 'commit message placeholder',
              merge_method: "merge"
            });
            console.log("SHOULD NOT PRINT!\n");
#            console.log('pulls.data:', pulls.data);
#            console.log('existing_pr data:', existing_pr);
#            console.log('\n\n\n mergePR:', mergePR);
