name: build-test-deploy

env:
  PR_NUMBER: ${{ github.event.number }}

on:
  pull_request_target:
    branches:
      - main


# todo preliminary-check
#      if: ${{ github.actor != github.repository_owner }} # todo trusted members instead of only owner.
# Verify that the feature branch does not change any workflow files unless author is a trusted member.
# HEAD^ is refers to the most recent commit in the repo while HEAD is the proposed new commit.
# Todo only supports owner update to check for trusted members instead.
jobs:
  verify-safe:
    runs-on: ubuntu-latest
    steps:
      - name: Verify that workflows have not changed
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github
          sparse-checkout-cone-mode: false
      - run: |
          NUM=$(git diff ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} -- .github/ | wc -m)
          if [ "$NUM" -ne 0 ]
          then
            echo "Changes detected in .github/ directory!! failing!" ; exit 1 
          else
            echo "No changes detected in .github/ directory, proceeding with build."
          fi

  build:
    needs: verify-safe
    runs-on: ubuntu-latest
    steps:
      # Since pull_request_target uses the base branch for its context (main in this case), use actions/checkout to
      # checkout the new code in the pull request for building/testing.
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Build functions.o
        run: gcc -I. -c functions.c -o functions.o

      - name: Build main.o
        run: gcc -I. -c main.c -o main.o

      - name: Build executable
        run: gcc -I. functions.o main.o -o main_exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: main_exe-artifact
          path: main_exe
          retention-days: 1

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: main_exe-artifact

      - name: Grant execution privilege and run test
        run: chmod 770 ./main_exe && ./main_exe

  deploy:
    # If using a team based structure instead of a solo developer.
    # if: ${{ github.actor == github.team_slug && github.actor.permissions == approved }}

    if: ${{ github.actor != github.repository_owner }}

    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: 'Merge pull request'
        uses: actions/github-script@v7
        with:
          script: |
            const { repo, owner } = context.repo;
            const merge_pr = await github.rest.pulls.merge({
              owner: owner,
              repo: repo,
              pull_number: ${{ env.PR_NUMBER }},
              commit_title: 'commit title placeholder',
              commit_message: 'commit message placeholder',
              merge_method: "merge"
            });
