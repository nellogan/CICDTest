name: build-test-deploy

env:
  PR_NUMBER: ${{ github.event.number }}

on:
  pull_request:
    branches:
      - main

#  pull_request_target:
#    branches:
#      - main


# todo preliminary-check
#      if: ${{ github.actor != github.repository_owner }} # todo trusted members instead of only owner.
# Verify that the feature branch does not change any workflow files unless author is a trusted member.
# HEAD^ is refers to the most recent commit in the repo while HEAD is the proposed new commit.
# Todo only supports owner update to check for trusted members instead.
jobs:

  verify-safe:
    runs-on: ubuntu-latest
    steps:
      - name: Verify that workflows have not changed
        uses: actions/checkout@v4
        with:
          # checkout full tree
          fetch-depth: 0
      - run: |
          echo github.event.pull_request.base.sha ${{ github.event.pull_request.base.sha }}
          echo github.event.pull_request.head.sha ${{ github.event.pull_request.head.sha }}
          NUM=$(git diff ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} -- .github/ | wc -m)
          echo number of bytes changed in .github/workflows/ $NUM
          if [ "$NUM" -ne 0 ]
          then
            echo "workflow changes detected!! failing!" ; exit 1 
          else
            echo "No workflow changes detected."
          fi


  build:
    runs-on: ubuntu-latest
    steps:

      - name: Check out repository code
        uses: actions/checkout@v4

#      - name: should not happen 111
#        run: echo 111 111 111

#      - name: force fail
#        run: exit 1

#      - name: Debug
#        run: |
#          echo ${{ github.event.type }}
#          echo ${{ github.event_name }}
#          echo ${{ github.ref }}
#          echo ${{ github.event.pull_request.head.ref }}
#          echo ${{ github.event.pull_request.base.ref }}

      - name: Install dependencies
        run: sudo apt-get install -y gcc

      - name: Build functions.o
        run: gcc -I. -c functions.c -o functions.o

      - name: Build main.o
        run: gcc -I. -c main.c -o main.o

      - name: Build executable
        run: gcc -I. functions.o main.o -o main_exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: main_exe-artifact
          path: main_exe
          retention-days: 1

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: main_exe-artifact

      - name: Grant execution privilege and run test
        run: chmod 770 ./main_exe && ./main_exe

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: 'Merge pull request'
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const merge_pr = await github.rest.pulls.merge({
              owner: owner,
              repo: repo,
              pull_number: ${{ env.PR_NUMBER }},
              commit_title: 'commit title placeholder',
              commit_message: 'commit message placeholder',
              merge_method: "merge"
            });
            console.log("merge_pr: ", merge_pr);