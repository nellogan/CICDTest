name: build-test-deploy


permissions: write-all

env:
  GITHUB_ssh-key: ${{ secrets.COMMIT_KEY }}
  PR_NUMBER: ${{ github.event.number }}

on:
  pull_request:
    branches:
      - main
    types: [ assigned, unassigned, labeled, unlabeled, opened, edited, closed, reopened, synchronize, converted_to_draft, locked, unlocked, enqueued, dequeued, milestoned, demilestoned, ready_for_review, review_requested, review_request_removed, auto_merge_enabled, auto_merge_disabled ]
#    base:
#      - main
#  push:
#    branches:
#      - main


# todo preliminary-check
#      if: ${{ github.actor != github.repository_owner }} # todo trusted members instead of only owner.
# Verify that the feature branch does not change any workflow files unless author is a trusted member.
# HEAD^ is refers to the most recent commit in the repo while HEAD is the proposed new commit.
# Todo only supports owner update to check for trusted members instead.
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.COMMIT_KEY }}


      - name: check if pull_request was trigger
        if: ${{ github.event_name == 'pull_request' }}
        run: echo pull_request was trigger

      - name: check if push was trigger
        if: ${{ github.event_name == 'push' }}
        run: echo push was trigger

      - name: PR NUMBER CHECK
        uses: actions/github-script@v6
        with:
          script: |
            console.log("PR NUMBER CHECK", ${{ env.PR_NUMBER }});

      - name: Install dependencies
        run: sudo apt-get install -y gcc

      - name: Build functions.o
        run: gcc -I. -c functions.c -o functions.o

      - name: Build main.o
        run: gcc -I. -c main.c -o main.o

      - name: Build executable
        run: gcc -I. functions.o main.o -o main_exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: main_exe-artifact
          path: main_exe
          retention-days: 1

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.COMMIT_KEY }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: main_exe-artifact

      - name: Grant execution privilege and run test
        run: chmod 770 ./main_exe && ./main_exe

  deploy:
    needs: test
    runs-on: ubuntu-latest
#    permissions: write-all
#    if: ${{ github.actor == github.repository_owner }} # todo trusted members instead of only owner.
    permissions: write-all
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.COMMIT_KEY }}

      - name: 'Merge pull request'
        uses: actions/github-script@v6
        with:
          ssh-key: ${{ secrets.COMMIT_KEY }}
          script: |
            const { repo, owner } = context.repo;
            const merge_pr = await github.rest.pulls.merge({
              owner: owner,
              repo: repo,
              pull_number: ${{ env.PR_NUMBER }},
              commit_title: 'commit title placeholder',
              commit_message: 'commit message placeholder',
              merge_method: "merge"
            });
            console.log("merge_pr: ", merge_pr);