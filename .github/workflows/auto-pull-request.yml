name: auto-pull-request

on:
  push

permissions: write-all

# Automatically open a pull request when a trusted member pushes.
# Todo only supports owner update to check for trusted members instead.
jobs:
  open-pull-request:
    runs-on: ubuntu-latest
#    if: ${{ github.actor == github.repository_owner }}
    permissions:
      pull-requests: write
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: 'Create pull request'
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const pulls = await github.rest.pulls.list({
              owner: owner,
              repo: repo,
              head: context.ref,
              base: 'main',
              state: 'open',
            });
            if (pulls.data.length < 1) {
              await github.rest.pulls.create({
                title: '[CI] Merge beta into main',
                owner: owner,
                repo: repo,
                head: context.ref,
                base: 'main',
                body: [
                  'This PR is auto-generated by',
                  '[actions/github-script](https://github.com/actions/github-script)',
                ].join('\n'),
              });
            } else {
              const existing_pr = pulls.data[0];
              await github.rest.pulls.update({
                owner: owner,
                repo: repo,
                pull_number: existing_pr.number,
                body: [
                  existing_pr.body,
                  `Updated by Job ${context.job}`,
                ].join('\n'),
              });
            }

      - name: 'Close pull request'
        uses: actions/github-script@v6
        with:
          script: |
            console.log("check\n");
            const { repo, owner } = context.repo;
            const pulls2 = await github.rest.pulls.list({
              owner: owner,
              repo: repo,
              head: context.ref,
              base: 'main',
              state: 'open',
            });
            const existing_pr = pulls2.data[0];
            
            const merge_pr = await github.rest.pulls.merge({
              owner: owner,
              repo: repo,
              head: context.ref,
              commit_title: "auto merge workflow commit title",
              commit_message: "auto merge workflow commit message"
              merge_method: 'merge',
            });
            console.log("merge_pr: ", merge_pr);
            
            

#            console.log("existing_pr", existing_pr);
#            const close_pr = await github.rest.pulls.update({
#              owner: owner,
#              repo: repo,
#              pull_number: existing_pr.number,
#              state: "closed",
#            });
#            console.log("close_pr", close_pr);
#            const reopen_pr = await github.rest.pulls.update({
#             owner: owner,
#             repo: repo,
#             pull_number: existing_pr.number,
#             state: "open",
#            });
#            console.log("reopen_pr", reopen_pr);